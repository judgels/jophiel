general {
    title = "Single Sign-On"
    copyright = "Judgels"
    canonicalUrl = "http://localhost:9001"
    githubUrl = "https://github.com/judgels/jophiel"
}

play {
    # The secret key used to secure cryptographics functions.
    # See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
    crypto.secret = "`b[7nm_OpCXwsRsVyDy7yxcqDqq[K60]h^kK<ZY`b`1?EH?N_/R0GqS9:G@5ngXQ"

    http {
        session {
            # Cookie variable name when saving session in client side
            cookieName = "JOPHIEL_SESSION"

            # Use HTTPS?
            secure = false
        }
        filters = "org.iatoki.judgels.play.JudgelsFilters"
    }

    modules {
        enabled += "play.api.libs.mailer.MailerModule"
        enabled += "org.iatoki.judgels.play.JudgelsModule"
        enabled += "org.iatoki.judgels.play.seo.SeoModule"
        enabled += "org.iatoki.judgels.jophiel.JophielModule"
    }

    # Email configuration when sending emails
    mailer {
        host = "smtp.xxx.com"
        port = 465
        ssl = "yes"
        user = "noreply@xxx.com"
        password = "xxx"
    }

    # Application languages
    i18n.langs = ["en-US"]

    # Thread pools
    # https://www.playframework.com/documentation/latest/ThreadPools
    akka = {include "akka.conf"}
}

# Database configuration
db.default = {include "db.conf"}
jpa.default = "defaultPersistenceUnit"

jophiel {
    # Base URL
    baseUrl = "http://localhost:9001"

    # Root data directory for saving local avatars
    baseDataDir = "/var/judgels/jophiel-data"

    # Jophiel clients to be shown on welcome page
    client {
        labels = ["Repository Gate"]
        targets = ["http://localhost:9002"]
    }

    # ID token private key
    idToken.key.private = "MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDCdoHMwrsIiggV6hp7Yf4FZaKqkAeHuk5WAbBzuIDB40gQKKimwfKk+yaR6UKOOduGM3k4eDbaZy3n8NCkWnAvVIwt4rus7LhDhVUNrJGQU9BdK59x+wvhUtMcE2eP0V3hjeJmqzhoJxqLIAcnksU2Z3mmAkgbXecV16fCgo8G1Ny+Ai+FY2ZefRK+LF0u9rGQx5tA6XuQOUWvPJb45YlzmEDLwEMw7nOqwnnN6mSj9cKVfDX33ayvZY0aenEn7SMtrAkia5gBKGKDfN2KECX6OD9joatmNW0b+z9RtAXJvrWtkXhGaZR9+YBLBITllAtgkWMLWCCnDDOM4lNLoj9XAgMBAAECggEACPCz1Psa6DCYYJGLuCJwMEVU7iyC/B13noKjXx6bZM6TMJL99fSyuB0Hz+t+cNV+HzRcnVkBhJb7yE8M+JFj2Pk1HKLw5+lWK1yE5YUKiC0iRjZMNUxKZoiNRhwqRbVlcIo6X2f9xuQNV1oYmhwoTvEA6b3vHLr7dcidYNbpxnGMQZs035um6zShIFNqrmM4poQZZE9NbltOX1k/qxD0+OAAuemU3Y7WzH1XvTwXy7qU8O0PCktTe+QBSJZUPxy1nZwKbF1vdad39KfCjvxemkdUdzuPvlMfi+dsDXjAz71ukUO0r1+4n+l9DYOI8Pq6oI5ZGcwmz5B/Fd8RpPb2gQKBgQDy1o9HCnkL4rw3Wg6hkM46dlPPT7Mm5p+GrNbRxd6bX0wRpXivcasT60u4UZnG7gVVjpqour6tbyRaVNr5F6Cxg6YXDnZKwa8Jz64oUduQqMw7FvGtBG8+NR/26wI53Xoe1nq50ugkq3V3l9TtW9p0ccrsELP7Nu6Fmd4aa9AMFwKBgQDNALqptObo+2jODiuU4+w4wt/hUZa0BbmhjkhJNVpczZvUlXkLtMCq1ESxH4wWzRpBvIlcWpKnSyxzuFD5rtjqHh1kqVbFjQ2k0hRGs5S2vT+aC5oTH4M92nRPCZbWq+26jSVcvAgFj+S6MSOofMDYVOfM3dEKhzNKVsChjGsuwQKBgBCccrKWWc9hVCSpKWUN5b2ECJmexw97KSBqREuXMHIKY8a1PfsqWFyFdOmH03ATKhQ/K/8svwxYFPGE6nGtlxVtfvgGyjq04wdVyIEDkHRlx4qnOCLwsbdcpPIcA0v4BXmEjGKXtb+EZwWmQi92YAwlGI9rWRRvHoPPEa1XAKVDAoGALWgf8D71dl1ZVWqmFJB3Xgsr84hSzQUHnNUbBbwfi7au8WM6MHGUy0HBBUpriRFc43qTIjWdjhiEfA0zQlqMCS8qa4VmhtM7VmqBuzdDlUZNtB0lv16XfzfH00nYcywZt9xTjjrHvBOnIeaIc2VOgZwsy5/GEYLoxWp5uE6V3wECgYALHhV4lk4bH1Gm2S7Od8yPix62dbwoFMjfFiI4Y3dCu7Um93MS34OSWo2pixb9w+1Y/ZNNfrq+tEhUSsJKd3MvE8oskUR4bo4yMQJZC1+FSNUpehjz1Z9XiqJMpsl9GGYXo+nzU27PwlZdorgd8uiH30sNLcm9VG3e72hbQ0EpmQ=="
}

# Configuration for sending emails
noreply {
    name = "noreply"
    email = "noreply@xxx.com"
}

aws {
    avatar {
        # AWS configuration for avatars
        s3.use = false
        key {
            use = true
            access = "xxx"
            secret = "xxx"
        }
        s3 {
            bucket {
                name = "judgels-avatar"
                regionId = "ap-southeast-1"
            }
        }
        cloudFront.baseUrl = "https://xxx.cloudfront.net/"
    }
}

# SEO
seo {
    metaKeywords = ""
    metaDescription = ""
}

# Google
google {
    # Analytics
    analytics {
        use = false
        id = "xxx"
        viewId = "xxx"
    }

    # Service Account (for APIs)
    serviceAccount {
        use = false
        clientId = "xxx"
        clientEmail = "xxx"
        privateKeyId = "xxx"
        privateKey = "-----BEGIN PRIVATE KEY-----\nxxx\n-----END PRIVATE KEY-----\n"
    }
}

# Recaptcha configuration
recaptcha {
    registration {
        use = false
        key {
            site = "xxx"
            secret = "xxx"
        }
    }
}

redis {
    host = "localhost"
    port = 6379
    database = 0
    pool.maxTotal = 128
}

banner {
    use = false
    link = ""
    imageSrc = ""
}
